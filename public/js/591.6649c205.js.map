{"version":3,"file":"js/591.6649c205.js","mappings":"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","sources":["webpack://shanotes-ui/./src/components/notes/Notes.vue","webpack://shanotes-ui/./src/components/notes/PathTree.vue","webpack://shanotes-ui/./src/api/notes.js","webpack://shanotes-ui/./src/models/notes.js","webpack://shanotes-ui/./src/components/notes/PathTree.vue?6044","webpack://shanotes-ui/./src/components/notes/Notes.vue?0aaf"],"sourcesContent":["<template>\r\n  <div id=\"main\">\r\n    <PathTree @click_path=\"handleClickPath\" />\r\n\r\n    <mavon-editor v-loading=\"loading\" v-if=\"cur_path && cur_path.link_type!=1\" id=\"md-editor\" v-model=\"markdown_content\"\r\n      @save=\"saveFile\" :defaultOpen=\"'preview'\" :subfield=\"false\" :toolbars=\"markdown_options\" :navigation=\"true\">\r\n    </mavon-editor>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport PathTree from './PathTree.vue'\r\nimport { read_link, update_link } from '../../api/notes';\r\nexport default {\r\n  components: { PathTree },\r\n  data() {\r\n    return {\r\n      markdown_options: {\r\n        navigation: true,\r\n        undo: true, // 上一步\r\n        redo: true, // 下一步\r\n        trash: true, // 清空\r\n        save: true, // 保存（触发events中的save事件）\r\n        subfield: true,\r\n        preview: true,\r\n      },\r\n      markdown_content: '',\r\n      cur_path: '',\r\n      raw_content: '',\r\n      loading: false,\r\n    }\r\n  },\r\n  computed: {\r\n    updated() {\r\n      return this.raw_content != this.markdown_content;\r\n    }\r\n  },\r\n  methods: {\r\n    async saveFile() {\r\n      this.loading = true;\r\n      let path_id = this.cur_path.path_id;\r\n      let res = await update_link(path_id, this.markdown_content);\r\n      this.loading = false;\r\n      if (res.meta.status != 200)\r\n        return alert(\"保存失败\");\r\n      this.raw_content = this.markdown_content;\r\n      return alert(\"保存成功\");\r\n    },\r\n    async handleClickPath(val) {\r\n      if (!val || val.path_id == 0 || val.link_type == 1)\r\n        return;\r\n      if (this.updated)\r\n        await this.saveFile();\r\n      this.cur_path = val;\r\n      console.log(val);\r\n      // 读取链接\r\n\r\n      this.loading = true;\r\n      let res = await read_link(val.path_id);\r\n      this.loading = false;\r\n\r\n      if (res.meta.status != 200)\r\n        return alert('请求数据失败');\r\n      res = res.content;\r\n      this.markdown_content = res.content == null ? '' : res.content;\r\n      this.raw_content = this.markdown_content;\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"less\">\r\n#main {\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  #md-editor {\r\n    height: 100%;\r\n    width: 80%;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"main\">\r\n    <el-card id=\"card\">\r\n      <!-- 操作栏 -->\r\n      <template #header>\r\n        <div class=\"operator-bar\">\r\n          <!-- 返回 -->\r\n          <el-button text @click=\"handleFolderBack\">\r\n            <el-icon>\r\n              <ArrowLeft />\r\n            </el-icon>\r\n          </el-button>\r\n          <!-- 打开，添加，删除 -->\r\n          <el-button-group>\r\n            <el-button text @click=\"open_folder\">\r\n              <el-icon>\r\n                <FolderOpened />\r\n              </el-icon>\r\n            </el-button>\r\n            <el-button text @click=\"dialog_vis=true\">\r\n              <el-icon>\r\n                <FolderAdd />\r\n              </el-icon>\r\n            </el-button>\r\n            <el-button type=\"danger\" @click=\"del_link\">\r\n              <el-icon>\r\n                <Delete />\r\n              </el-icon>\r\n            </el-button>\r\n          </el-button-group>\r\n        </div>\r\n      </template>\r\n      <!-- 目录树 -->\r\n      <el-tree @node-drop=\"handleDrag\" draggable v-loading=\"loading\" highlight-current :data=\"folder\"\r\n        :allow-drop=\"allowDrop\" @node-click=\"handleNodeClick\" :props=\"{ class: customNodeClass }\"></el-tree>\r\n    </el-card>\r\n    <!-- 创建文件(夹)对话框 -->\r\n    <el-dialog v-model=\"dialog_vis\" title=\"创建新路径\" :before-close=\"handleDiaClose\">\r\n\r\n      <el-form label-width=\"120px\">\r\n        <el-form-item label=\"目录类型\">\r\n          <el-radio-group v-model=\"create_info.type\">\r\n            <el-radio label=\"folder\">文件夹</el-radio>\r\n            <el-radio label=\"file\">文件</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"标题\">\r\n          <el-input v-model=\"create_info.title\" :style=\"{'width':'200px'}\" id=\"path-name-input\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialog_vis = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"createLink\">确认</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n    <!-- 删除文件夹对话框 -->\r\n    <el-dialog v-model=\"del_dia_vis\" title=\"删除确认\">\r\n      <span>\r\n        <p style=\"margin-bottom:40px; font-size:30px;color:red\">\r\n          你确定要删除{{selected_folder.label}}吗？删除操作不可撤销<br />\r\n        </p>\r\n      </span>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"dialog_vis = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"confirmDeleteLink\">确认</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { root_path, create_folder, del, create_note, get_children, move_link, update_link } from \"../../api/notes\";\r\nimport { read_link, read_meta } from '../../api/notes';\r\nimport { gen_folder_chilren_arr } from '../../models/notes';\r\nimport { ElMessage } from 'element-plus'\r\n\r\n\r\nconst FOLDER_TAG = 1, FILE_TAG = 2;\r\n\r\n\r\nexport default {\r\n  async mounted() {\r\n    // 防止刷新丢失\r\n    let cur_fid = parseInt(window.localStorage.getItem('cur_fid'));\r\n\r\n    this.froot = this.folder[0];\r\n\r\n    if (cur_fid) {\r\n      await this.reload_root(cur_fid);\r\n      this.selected_fid = cur_fid;\r\n    }\r\n    else {\r\n      this.selected_fid = 0;\r\n      this.selected_folder = this.froot;\r\n      await this.reload_root();\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      create_info: {\r\n        title: '',\r\n        type: ''\r\n      },\r\n      // 选中的folder id \r\n      selected_fid: 0,\r\n      //选中的folder \r\n      selected_folder: null,\r\n      loading: false,\r\n      // 创建对话框\r\n      dialog_vis: false,\r\n      // 删除对话框\r\n      del_dia_vis: false,\r\n\r\n      is_empty_folder: false,\r\n      froot: null,\r\n      folder: [{\r\n        label: '根目录',\r\n        path_id: 0,\r\n        link_type: 1,\r\n        depth: 0,\r\n        children: [],\r\n        parent: 0,\r\n      }]\r\n    }\r\n  },\r\n  methods: {\r\n    customNodeClass(tree, node) {\r\n      let data = node.data;\r\n      if (data.link_type == 1) {\r\n        return `is-folder`;\r\n      }\r\n      return null;\r\n\r\n    },\r\n    // 加载根路径\r\n    async reload_root(path_id = 0) {\r\n      let root_folder;\r\n      if (path_id == 0) {\r\n        // init\r\n        this.froot.parent = 0;\r\n        this.froot.path_id = 0;\r\n        this.froot.label = \"根目录\";\r\n        this.froot.depth = 0;\r\n        this.froot.children = [];\r\n\r\n        this.loading = true;\r\n        root_folder = await root_path();\r\n        this.loading = false;\r\n\r\n        this.is_empty_folder = root_folder.meta.status != 200;\r\n        if (!this.is_empty_folder) {\r\n          this.froot.children = await this.process_folder(root_folder.value, 0, 1, 1);\r\n        }\r\n      }\r\n      else {\r\n        let folder_meta = await read_link(path_id);\r\n        if (folder_meta.meta.status != 200)\r\n          return alert(folder_meta.meta.message);\r\n\r\n        folder_meta = folder_meta.content;\r\n\r\n        this.froot.path_id = folder_meta.id;\r\n        this.froot.label = folder_meta.title;\r\n        this.froot.parent = folder_meta.parent;\r\n        this.froot.depth = 0;\r\n        this.froot.children = [];\r\n\r\n        this.loading = true;\r\n        root_folder = await get_children(path_id);\r\n        this.loading = false;\r\n\r\n        this.is_empty_folder = root_folder == null;\r\n        if (!this.is_empty_folder) {\r\n          this.froot.children = await this.process_folder(root_folder, this.froot.path_id, 1);\r\n        }\r\n      }\r\n\r\n    },\r\n    // 数据处理的一些函数 ==============================\r\n    // 将文件列表转为element tree\r\n    async process_folder(value, parent, depth = 1, end_depth) {\r\n      let ret = [];\r\n      for (let item of value) {\r\n        let obj = { label: item.title, depth, path_id: item.id, link_type: item.link_type, children: null, parent };\r\n        // 每次最多多读取一层\r\n        if (depth <= end_depth && item.link_type == FOLDER_TAG) {\r\n          let sons = await get_children(item.id);\r\n          if (sons != null)\r\n            obj.children = await this.process_folder(sons, item.id, depth + 1, end_depth);\r\n        }\r\n        if (item.children != undefined && item.children != null)\r\n          obj.children = item.children;\r\n        ret.push(obj);\r\n      }\r\n      return ret;\r\n    },\r\n    async sync_folder_info(folder) {\r\n      let arr = gen_folder_chilren_arr(folder.children);\r\n      return await update_link(folder.path_id, JSON.stringify(arr));\r\n    },\r\n    handleDiaClose() {\r\n      this.dialog_vis = false;\r\n    },\r\n    async handleFolderBack() {\r\n      if (this.froot.path_id != 0) {\r\n        await this.reload_root(this.froot.parent);\r\n        window.localStorage.setItem('cur_fid', this.froot.parent);\r\n      }\r\n    },\r\n    async createLink() {\r\n      if (this.create_info.title.length < 1)\r\n        return alert(\"标题必须长度必须大于1\");\r\n      if (this.create_info.type == \"folder\") {\r\n        let id = await create_folder(this.selected_fid, this.create_info.title);\r\n        if (id.meta.status != 200)\r\n          return alert('创建失败');\r\n\r\n        id = id.id;\r\n        let val = {\r\n          label: this.create_info.title, path_id: id, link_type: 1, children: []\r\n        }\r\n        this.selected_folder.children.push(val);\r\n      }\r\n      else if (this.create_info.type == 'file') {\r\n        let id = await create_note(this.selected_fid, this.create_info.title);\r\n        if (id.meta.status != 200)\r\n          return alert('创建失败');\r\n\r\n        id = id.id;\r\n        let val = {\r\n          label: this.create_info.title, path_id: id, link_type: 2, children: []\r\n        }\r\n        this.selected_folder.children.push(val);\r\n      }\r\n      this.dialog_vis = false;\r\n    },\r\n\r\n    del_link() {\r\n      this.del_dia_vis = true;\r\n    },\r\n    async open_folder() {\r\n      if (this.selected_folder.link_type != FOLDER_TAG)\r\n        ElMessage({\r\n          message: '请打开一个文件夹',\r\n          type: 'error',\r\n        })\r\n      else {\r\n        window.localStorage.setItem('cur_fid', this.selected_fid);\r\n\r\n        await this.reload_root(this.selected_fid);\r\n      }\r\n    },\r\n    async confirmDeleteLink() {\r\n      await del(this.selected_fid);\r\n      this.del_dia_vis = false;\r\n\r\n      let iter = (value) => {\r\n        if (value.link_type == FOLDER_TAG && value.children) {\r\n          value.children = value.children.filter((item) => {\r\n            return item.path_id != this.selected_fid;\r\n          })\r\n          for (let item of value.children)\r\n            iter(item);\r\n        }\r\n      }\r\n\r\n      iter(this.froot);\r\n\r\n    },\r\n\r\n    // 树形控件的一些函数 ===============================\r\n    allowDrop(draggingNode, dropNode, type) {\r\n      if (type == 'inner')\r\n        return dropNode.data.link_type == 1;\r\n      else {\r\n        if (dropNode.data.depth == 0) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    // 处理点击事件\r\n    async handleNodeClick(tree_node) {\r\n      this.selected_fid = tree_node.path_id;\r\n      this.selected_folder = tree_node;\r\n      this.$emit('click_path', this.selected_folder);\r\n      // 文件类型\r\n      if (tree_node.link_type == '2') {\r\n      }\r\n      //文件夹\r\n      else {\r\n        if (!tree_node.children) {\r\n          let children_list = await get_children(tree_node.path_id);\r\n          tree_node.children = await this.process_folder(children_list, tree_node.depth + 1, tree_node.depth + 2);\r\n        }\r\n      }\r\n    },\r\n    async handleDrag(node, enter_node, type) {\r\n      let raw_enter = enter_node;\r\n\r\n      node = node.data, enter_node = enter_node.data;\r\n      let mid = node.path_id, dest_id = enter_node.path_id;\r\n      let node_meta = await read_meta(node.path_id), enter_meta = await read_meta(enter_node.path_id);\r\n\r\n      if (type == 'inner') {\r\n        // alert(`将${node.label} 移动到 ${enter_node.label}`);\r\n        let res = await move_link(mid, dest_id);\r\n        if (res.meta.status != 200) {\r\n          return alert(res.meta.message);\r\n        }\r\n        if (!this.sync_folder_info(enter_node))\r\n          return alert(\"更新文件夹信息失败\");\r\n      }\r\n      else {\r\n        if (node_meta.parent == enter_meta.parent) {\r\n          // alert(\"只要更新目录\");\r\n          await this.sync_folder_info(raw_enter.parent.data)\r\n        }\r\n        else {\r\n          // alert(`将${node.label} 移动到 ${enter_node.label}的父亲`);\r\n          let res = await move_link(mid, enter_node.parent);\r\n          if (res.meta.status != 200)\r\n            return alert(res.meta.message);\r\n          await this.sync_folder_info(raw_enter.parent.data)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.main {\r\n  width: 250px;\r\n}\r\n.el-card {\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  min-height: 90vh;\r\n}\r\n\r\n#card {\r\n  .operator-bar {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n}\r\n</style>\r\n<style>\r\n.is-folder > .el-tree-node__content {\r\n  font-weight: bolder;\r\n}\r\n</style>","import { doGet, doPost } from \"@/utils/request\";\r\n// raw\r\nexport async function root_path() {\r\n    return await doGet('/notes/root');\r\n}\r\nexport async function create_folder(parent, title) {\r\n    return await doPost('/notes/create_folder', { parent, title })\r\n}\r\nexport async function create_note(parent, title) {\r\n    return await doPost('/notes/create_note', { parent, title })\r\n}\r\nexport async function del(id) {\r\n    return await doPost('/notes/del_link', { path_id: id });\r\n}\r\nexport async function read_link(id) {\r\n    return await doGet('/notes/read_link', { path_id: id });\r\n}\r\nexport async function update_link(id, content) {\r\n    return await doPost('/notes/update_link', { path_id: id, content });\r\n}\r\nexport async function read_meta(id) {\r\n    return await doGet('/notes/read_meta', { path_id: id });\r\n}\r\nexport async function move_link(path_id, parent) {\r\n    return await doPost('/notes/move_link', { path_id:path_id, parent });\r\n}\r\n// processed\r\nexport async function get_children(parent) {\r\n    let ret = [];\r\n\r\n    let pinfo = await doGet('/notes/read_link', { path_id: parent });\r\n    if (pinfo.meta.status != 200)\r\n        return [];\r\n    let value = pinfo.content;\r\n    let file_list = JSON.parse(value.content);\r\n    let cinfo = await doGet('/notes/read_child', { path_id: parent });\r\n    if (cinfo.meta.status != 200 || !cinfo.value)\r\n        return [];\r\n    let tab = new Map();\r\n    cinfo = cinfo.value;\r\n\r\n    for (let item of cinfo)\r\n        tab.set(item.id, item);\r\n    for (let item of file_list)\r\n        if (tab.has(item))\r\n            ret.push(tab.get(item));\r\n    return ret;\r\n}\r\n\r\n","export function gen_folder_chilren_arr(value) {\r\n    let arr = [];\r\n    for (let item of value)\r\n        arr.push(item.path_id);\r\n    return arr;\r\n}","import { render } from \"./PathTree.vue?vue&type=template&id=78a7395d&scoped=true\"\nimport script from \"./PathTree.vue?vue&type=script&lang=js\"\nexport * from \"./PathTree.vue?vue&type=script&lang=js\"\n\nimport \"./PathTree.vue?vue&type=style&index=0&id=78a7395d&lang=less&scoped=true\"\nimport \"./PathTree.vue?vue&type=style&index=1&id=78a7395d&lang=css\"\n\nimport exportComponent from \"D:\\\\Github\\\\Shagula\\\\shanotes-ui\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-78a7395d\"]])\n\nexport default __exports__","import { render } from \"./Notes.vue?vue&type=template&id=018896e4&scoped=true\"\nimport script from \"./Notes.vue?vue&type=script&lang=js\"\nexport * from \"./Notes.vue?vue&type=script&lang=js\"\n\nimport \"./Notes.vue?vue&type=style&index=0&id=018896e4&scoped=true&lang=less\"\n\nimport exportComponent from \"D:\\\\Github\\\\Shagula\\\\shanotes-ui\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-018896e4\"]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_createVNode","_component_PathTree","onClick_path","$options","$data","link_type","_createBlock","_component_mavon_editor","$event","onSave","defaultOpen","subfield","toolbars","navigation","class","style","_createElementVNode","_component_el_card","header","_component_el_button","text","onClick","_component_el_icon","_component_ArrowLeft","_component_el_button_group","_component_FolderOpened","_component_FolderAdd","type","_component_Delete","_component_el_tree","onNodeDrop","draggable","data","onNodeClick","props","_component_el_dialog","title","footer","_component_el_form","_component_el_form_item","label","_component_el_radio_group","_component_el_radio","_component_el_input","_toDisplayString","_hoisted_9","async","root_path","doGet","create_folder","parent","doPost","create_note","del","path_id","read_link","update_link","content","read_meta","move_link","get_children","ret","pinfo","meta","status","value","file_list","JSON","parse","cinfo","tab","Map","item","set","has","push","get","gen_folder_chilren_arr","arr","FOLDER_TAG","cur_fid","parseInt","window","localStorage","getItem","this","froot","folder","reload_root","selected_fid","selected_folder","create_info","loading","dialog_vis","del_dia_vis","is_empty_folder","depth","children","methods","customNodeClass","tree","node","root_folder","process_folder","folder_meta","alert","message","end_depth","obj","sons","undefined","stringify","handleDiaClose","setItem","length","val","del_link","ElMessage","iter","filter","allowDrop","draggingNode","dropNode","tree_node","$emit","children_list","enter_node","raw_enter","mid","dest_id","node_meta","enter_meta","res","sync_folder_info","__exports__","components","PathTree","markdown_options","undo","redo","trash","save","preview","markdown_content","cur_path","raw_content","computed","updated","saveFile","console","log","render"],"sourceRoot":""}